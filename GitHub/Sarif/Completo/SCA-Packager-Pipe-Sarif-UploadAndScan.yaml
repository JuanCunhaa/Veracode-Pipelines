# APIID, APIKEY e SRCCLR_API_TOKEN nos secrets

name: Veracode SCA + AutoPackager + Pipeline Scan + SARIF + Upload And Scan

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  security-events: write

jobs:
  veracode:
    runs-on: ubuntu-latest
    steps:
      - name: 🏁 Checkout
        uses: actions/checkout@v4

      # 🔎 SCA primeiro (agent-based)
      - name: 🧩 Veracode SCA (Agent-Based)
        uses: veracode/veracode-sca@v2.1.9
        env:
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          path: .
          quick: false
          create-issues: false
          # recursive: true
          # skip-collectors: "npm,gradle"
          # allow-dirty: true

      - name: 📦 Publicar resultado SCA como artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: veracode-sca-results
          path: |
            **/scaResults.json
            **/scaResults.txt

      - name: 📦 Instalar Veracode CLI
        run: |
          curl -fsS https://tools.veracode.com/veracode-cli/install | sh
          ./veracode --version
        # Docs CLI/autopackage: https://docs.veracode.com/ (citado abaixo)

      - name: 📁 Auto Packager (gera e renomeia zip)
        id: pack
        shell: bash
        run: |
          set -euo pipefail
          out_dir="veracode-out"
          mkdir -p "$out_dir"
          ./veracode package --source . --output "$out_dir" --trust
          zip_file=$(find "$out_dir" -maxdepth 1 -type f -name '*.zip' | head -n1)
          if [ -z "${zip_file:-}" ]; then
            echo "Nenhum .zip gerado pelo Auto Packager." >&2
            ls -lah "$out_dir" || true
            exit 1
          fi
          final_zip="$GITHUB_WORKSPACE/analysisPack.zip"
          mv -f "$zip_file" "$final_zip"
          echo "artifact=$final_zip" >> "$GITHUB_OUTPUT"

      - name: 🔍 Veracode Pipeline Scan (gera JSON)
        uses: veracode/Veracode-pipeline-scan-action@v1.0.9
        with:
          vid: ${{ secrets.VID }}
          vkey: ${{ secrets.VKEY }}
          file: ${{ steps.pack.outputs.artifact }}
          json_output: true
          json_output_file: results.json

      - name: 🔄 Converter JSON -> SARIF + Upload
        uses: veracode/veracode-pipeline-scan-results-to-sarif@v2.0.3
        with:
          scan-type: pipeline
          pipeline-results-json: results.json
          output-results-sarif: veracode-results.sarif
          githubToken: ${{ github.token }}

      - name: 🚀 Veracode Upload & Scan (Policy/Sandbox)
        uses: veracode/veracode-uploadandscan-action@0.2.8
        with:
          vid: ${{ secrets.VID }}
          vkey: ${{ secrets.VKEY }}
          appname: ${{ github.repository }}
          createprofile: true
          filepath: ${{ steps.pack.outputs.artifact }}
          version: build-${{ github.run_id }}-${{ github.sha }}
          deleteincompletescan: 2
          scantimeout: 60
          # sandboxname: MeuSandbox
          # policy: MinhaPolicy
          # criticality: High

      - name: 📦 Publicar SARIF/JSON/ZIP como artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: veracode-findings
          path: |
            results.json
            veracode-results.sarif
            ${{ steps.pack.outputs.artifact }}
