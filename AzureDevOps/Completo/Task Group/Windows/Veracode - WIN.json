{"tasks":[{"environment":{"SRCCLR_API_TOKEN":"$(SRCCLR_API_TOKEN)"},"displayName":"SCA","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"retryCountOnTaskFailure":0,"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"$ErrorActionPreference = \"Stop\"\n\nWrite-Host \"üîç Rodando Veracode SCA...\"\n\n# Baixa o instalador como STRING (evita o erro de byte[])\n$wc = New-Object System.Net.WebClient\ntry {\n  $ci = $wc.DownloadString('https://sca-downloads.veracode.com/ci.ps1')\n} catch {\n  $ci = $wc.DownloadString('https://download.sourceclear.com/ci.ps1')\n}\n\n# Executa o instalador do agente (adiciona srcclr ao PATH da sess√£o)\nInvoke-Expression $ci\n\n# Executa o scan (usa SRCCLR_API_TOKEN se definido no ambiente)\n& srcclr scan\n\nWrite-Host \"‚úÖ SCA finalizado.\"\n","errorActionPreference":"stop","warningPreference":"default","informationPreference":"default","verbosePreference":"default","debugPreference":"default","progressPreference":"silentlyContinue","failOnStderr":"false","showWarnings":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"","runScriptInSeparateScope":"false"},"task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"}},{"environment":{},"displayName":"Auto Packager","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"retryCountOnTaskFailure":0,"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"$ErrorActionPreference = \"Stop\"\nInvoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://tools.veracode.com/veracode-cli/install.ps1'))\nNew-Item -ItemType Directory -Force -Path \"$env:BUILD_ARTIFACTSTAGINGDIRECTORY\\artifact\" | Out-Null\nveracode package --source . --type directory --output \"$env:BUILD_ARTIFACTSTAGINGDIRECTORY\\artifact\" --trust --verbose","errorActionPreference":"stop","warningPreference":"default","informationPreference":"default","verbosePreference":"default","debugPreference":"default","progressPreference":"silentlyContinue","failOnStderr":"false","showWarnings":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"","runScriptInSeparateScope":"false"},"task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"}},{"environment":{},"displayName":"Compilador","alwaysRun":false,"continueOnError":false,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"retryCountOnTaskFailure":0,"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"$ErrorActionPreference = \"Stop\"\n\n$artifactRoot = Join-Path $env:BUILD_ARTIFACTSTAGINGDIRECTORY 'artifact'\nSet-Location $artifactRoot\n\nNew-Item -ItemType Directory -Force -Path 'merged' | Out-Null\n\nWrite-Host (\"Procurando arquivos .zip em {0}\" -f (Join-Path $env:BUILD_ARTIFACTSTAGINGDIRECTORY 'artifact'))\n\n$zips = Get-ChildItem -Filter *.zip -File -ErrorAction SilentlyContinue\nif ($zips) {\n    foreach ($zip in $zips) {\n        $zipName = $zip.Name\n        Write-Host (\"Extraindo {0} para merged/\" -f $zipName)\n        Expand-Archive -Path $zip.FullName -DestinationPath 'merged' -Force\n    }\n}\nelse {\n    Write-Host 'Nenhum arquivo .zip encontrado.'\n}\n\n$items = Get-ChildItem -Force | Where-Object { $_.Name -ne 'merged' -and $_.Extension -ne '.zip' }\nforeach ($item in $items) {\n    $itemName = $item.Name\n    Write-Host (\"Movendo {0} para merged/\" -f $itemName)\n    Move-Item -LiteralPath $item.FullName -Destination 'merged' -Force\n}\n\nWrite-Host 'Compactando tudo em analysisPack.zip'\n$tmpZip = Join-Path ([System.IO.Path]::GetTempPath()) 'analysisPack.zip'\nif (Test-Path $tmpZip) { Remove-Item $tmpZip -Force }\nCompress-Archive -Path (Join-Path 'merged' '*') -DestinationPath $tmpZip -Force\n\nWrite-Host (\"Limpando {0}\" -f (Join-Path $env:BUILD_ARTIFACTSTAGINGDIRECTORY 'artifact'))\nGet-ChildItem -Force | Remove-Item -Recurse -Force\n\nMove-Item -LiteralPath $tmpZip -Destination (Join-Path $artifactRoot 'analysisPack.zip') -Force\n\nWrite-Host (\"Novo pacote pronto: {0}\" -f (Join-Path $env:BUILD_ARTIFACTSTAGINGDIRECTORY 'artifact\\analysisPack.zip'))\n","errorActionPreference":"stop","warningPreference":"default","informationPreference":"default","verbosePreference":"default","debugPreference":"default","progressPreference":"silentlyContinue","failOnStderr":"false","showWarnings":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"","runScriptInSeparateScope":"false"},"task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"}},{"environment":{},"displayName":"Pipeline Scan","alwaysRun":false,"continueOnError":true,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"retryCountOnTaskFailure":0,"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"$ErrorActionPreference = \"Stop\"\nSet-StrictMode -Version Latest\n$APIID  = if (-not [string]::IsNullOrWhiteSpace($env:APIID))  { $env:APIID }  else { \"$(APIID)\" }\n$APIKEY = if (-not [string]::IsNullOrWhiteSpace($env:APIKEY)) { $env:APIKEY } else { \"$(APIKEY)\" }\nif ([string]::IsNullOrWhiteSpace($APIID))  { Write-Host \"‚ùå APIID n√£o definido.\" }  else { Write-Host \"‚úÖ APIID encontrado.\" }\nif ([string]::IsNullOrWhiteSpace($APIKEY)) { Write-Host \"‚ùå APIKEY n√£o definido.\" } else { Write-Host \"‚úÖ APIKEY encontrado.\" }\n$ART = Join-Path $env:BUILD_ARTIFACTSTAGINGDIRECTORY 'artifact\\analysisPack.zip'\nif (-not (Test-Path $ART)) {\n  throw \"Artefato n√£o encontrado: $ART\"\n}\nWrite-Host \"Running Veracode Pipeline Scan CLI...\"\n$zip = \"pipeline-scan-LATEST.zip\"\nInvoke-WebRequest -Uri \"https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip\" -OutFile $zip -UseBasicParsing\nif (Test-Path \"pipeline-scan\") { Remove-Item -Recurse -Force \"pipeline-scan\" }\nExpand-Archive -Path $zip -DestinationPath \"pipeline-scan\" -Force\n& java -jar \"pipeline-scan\\pipeline-scan.jar\" `\n  -vid $APIID `\n  -vkey $APIKEY `\n  -f $ART `\n  --json_output true `\n  --issue_details true\nif ($LASTEXITCODE -ne 0) { throw \"Pipeline Scan falhou com exit code $LASTEXITCODE\" }\nWrite-Host \"‚úÖ Pipeline Scan finalizado.\"","errorActionPreference":"stop","warningPreference":"default","informationPreference":"default","verbosePreference":"default","debugPreference":"default","progressPreference":"silentlyContinue","failOnStderr":"false","showWarnings":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"","runScriptInSeparateScope":"false"},"task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"}},{"environment":{},"displayName":"Upload and scan: $(Build.ArtifactStagingDirectory)/artifact","alwaysRun":false,"continueOnError":true,"condition":"succeeded()","enabled":true,"timeoutInMinutes":0,"retryCountOnTaskFailure":0,"inputs":{"ConnectionDetailsSelection":"Credentials","AnalysisService":"","apiId":"$(APIID)","apiKey":"$(APIKEY)","veracodeAppProfile":"\"azure - $(Build.Repository.Name)\"","version":"$(build.buildNumber)","filepath":"$(Build.ArtifactStagingDirectory)/artifact","sandboxName":"","createSandBox":"false","optargs":"-deleteincompletescan 2","createProfile":"true","failBuildIfUploadAndScanBuildStepFails":"false","importResults":"false","failBuildOnPolicyFail":"false","maximumWaitTime":"360"},"task":{"id":"6292a058-d4f5-407b-b6c6-815df9ee59d6","versionSpec":"3.*","definitionType":"task"}}],"runsOn":["Agent","DeploymentGroup"],"revision":2,"createdBy":{"displayName":"Juan Cunha","id":"6f2a07bd-8f1e-6a7b-981d-a87d11bd773a","uniqueName":"juan.cunha@afrikatec.com.br"},"createdOn":"2025-08-15T23:35:33.223Z","modifiedBy":{"displayName":"Juan Cunha","id":"6f2a07bd-8f1e-6a7b-981d-a87d11bd773a","uniqueName":"juan.cunha@afrikatec.com.br"},"modifiedOn":"2025-08-18T13:09:25.213Z","comment":"","id":"fb022fbc-3b35-4f6d-844f-792d54a63110","name":"Veracode - WIN","version":{"major":1,"minor":0,"patch":0,"isTest":false},"iconUrl":"https://cdn.vsassets.io/v/M259_20250724.10/_content/icon-meta-task.png","friendlyName":"Veracode - WIN","description":"","category":"Utility","definitionType":"metaTask","author":"Juan Cunha","demands":[],"groups":[],"inputs":[{"aliases":[],"options":{},"properties":{},"name":"APIID","label":"APIID","defaultValue":"","required":true,"type":"string","helpMarkDown":"Enter your Veracode API ID. For instructions on generating your API credentials, go to the Veracode Documentation and search for \"Generate Veracode API Credentials\".","groupName":""},{"aliases":[],"options":{},"properties":{},"name":"APIKEY","label":"APIKEY","defaultValue":"","required":true,"type":"string","helpMarkDown":"Enter your Veracode API key. For instructions on generating your API credentials, go to the Veracode Documentation and search for \"Generate Veracode API Credentials\".","groupName":""}],"satisfies":[],"sourceDefinitions":[],"dataSourceBindings":[],"instanceNameFormat":"Task group: Veracode - WIN $(APIID)","preJobExecution":{},"execution":{},"postJobExecution":{},"_buildConfigMapping":{}}